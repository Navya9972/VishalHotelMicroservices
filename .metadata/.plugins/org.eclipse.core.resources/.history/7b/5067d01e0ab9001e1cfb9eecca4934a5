package com.userservices.services.Imp;

import java.util.ArrayList;

import java.util.List;

import java.util.UUID;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.netflix.discovery.converters.Auto;
import com.userservices.entities.Hotel;
import com.userservices.entities.Rating;
import com.userservices.entities.User;
import com.userservices.exceptions.ResourceNotFoundException;
import com.userservices.external.services.HotelService;
import com.userservices.repo.UserRepo;
import com.userservices.services.UserServices;

@Service
public class UserServiceImpl implements UserServices{

	@Autowired
	private UserRepo userrpo;
	
	@Autowired
	private RestTemplate restTemplate;
	
	@Autowired
	private HotelService hotelservice;
	
	private Logger logger = LoggerFactory.getLogger(UserServiceImpl.class);
	
	@Override
	public User saveUser(User user) {
		String randomUserId = UUID.randomUUID().toString();
		user.setId(randomUserId);
		return userrpo.save(user);
		}

	
	@Override
	public List<User> getAllUser() {
		return userrpo.findAll();
	}
	
	

	@Override
	public User getUser(String userId) {
		User user = userrpo.findById(userId).orElseThrow(() -> new ResourceNotFoundException("User with given ID does not exist id:!!" + userId));
//		Rating rating = new Rating; 
		Hotel hotel = hotelservice.getHotel(rating.getHotelId());
		ArrayList ratingsList = restTemplate.getForObject("http://HOTEL-RATING-APPLICATION/ratings/getByUserId/"+ user.getId(), ArrayList.class);
		user.setRatings(ratingsList);
		return user;
	}

}
