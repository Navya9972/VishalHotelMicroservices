package com.userservices.controller;

import java.util.List;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.userservices.entities.User;
import com.userservices.services.UserServices;

import io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker;




@RestController
@RequestMapping("/user")
public class UserController {

	
	@Autowired
	private UserServices userService;
	
	//for creating a user 
	@PostMapping("/createUser")
	public ResponseEntity<User> createUser(@RequestBody  User user){
		User user1 = userService.saveUser(user);
		return ResponseEntity.status(HttpStatus.CREATED).body(user1);
		
	}
	
	//for getting a single user
	@GetMapping("/getUser/{userId}")
	@CircuitBreaker(name = "ratingHotelBreaker" , fallbackMethod = "ratingHotelFallback")
	public ResponseEntity<User> getSingleUser( @PathVariable String userId)
	{
		User user1 = userService.getUser(userId);
		return ResponseEntity.ok(user1);
	}
	
	public ResponseEntity<User> 
	//for getting all users
	@GetMapping("/getAllUsers")
	public ResponseEntity<List<User>> getAllUsers()
	{
		 List<User> users = userService.getAllUser();
		 return ResponseEntity.ok(users);
		
	}
}
